/*!
 * @danielhaim/imageemitter - v1.0.3 - 2024-01-20
 * git+https://github.com/danielhaim1/imageemitter.git
 * Copyright (c) 2024 Daniel Haim, Licensed MIT
 */(()=>{"use strict";var e={497:(e,t,s)=>{var i=s(352),a=s(487);e.exports&&(e.exports={ImageEmitter:i.ImageEmitter,ImageHelper:a.ImageHelper}),"object"==typeof window&&(window.ImageEmitter=i.ImageEmitter,window.ImageHelper=a.ImageHelper)},507:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ImageEvents=void 0;t.ImageEvents=class{constructor(){this._events={},this._onceEvents={}}on(e,t){e&&t&&(this._events[e]=this._events[e]||[],this._events[e].includes(t)||this._events[e].push(t))}once(e,t){e&&t&&(this.on(e,t),this._onceEvents[e]=this._onceEvents[e]||{},this._onceEvents[e][t]=!0)}off(e,t){let s=this._events[e];if(s){const e=s.indexOf(t);-1!=e&&s.splice(e,1)}this._onceEvents[e]&&delete this._onceEvents[e][t]}emitEvent(e,t=[]){let s=this._events[e]?.slice()||[],i=this._onceEvents[e];for(let a of s)i&&i[a]&&this.off(e,a),a.apply(this,t)}allOff(){this._events={},this._onceEvents={}}}},487:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ImageHelper=void 0;t.ImageHelper=class{static getNaturalDimensions(e){return{width:e&&e.naturalWidth||null,height:e&&e.naturalHeight||null}}static getImageFormat(e){const{width:t,height:s}=this.getNaturalDimensions(e);return t&&s?t>s?"landscape":t<s?"portrait":"square":null}static getImageSize(e){const{width:t,height:s}=this.getNaturalDimensions(e);return t&&s?t>1200||s>1200?"lg":t>600||s>600?"md":"sm":null}static classifyImage(e){return{format:this.getImageFormat(e)||null,size:this.getImageSize(e)||null}}static classifyImages(e){Array.isArray(e)&&e.length>0&&e.forEach((e=>{const{format:t,size:s}=this.classifyImage(e);t&&e.classList.add(`img-${t}`),s&&e.classList.add(`img-${s}`)}))}}},352:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ImageEmitter=void 0;var i=s(507);class a extends i.ImageEvents{constructor(e){super(),this.images=[],this.isComplete=!1,this.elements=e instanceof NodeList?Array.from(e):[e],this.initImages(),this.checkImages()}initImages(){this.elements.forEach((e=>{"IMG"===e.tagName&&e.setAttribute("data-loaded","false")}))}checkImages(){const e=this.elements.filter((e=>"IMG"===e.tagName)).length+this.elements.filter((e=>"none"!==window.getComputedStyle(e).backgroundImage)).length;let t=0;this.elements.forEach((s=>{if("IMG"===s.tagName)this.loadImage(s,(()=>{t++,s.setAttribute("data-loaded","true"),this.progress(t,e)}));else{const i=window.getComputedStyle(s).backgroundImage;if("none"!==i){const s=i.slice(5,-2);this.loadBackgroundImage(s,(()=>{t++,this.progress(t,e)}))}}}))}loadImage(e,t){const s=new Image;s.onload=()=>{this.images.push({imgElement:e,isLoaded:!0}),t()},s.onerror=()=>{this.images.push({imgElement:e,isLoaded:!1}),t()},s.src=e.src}loadBackgroundImage(e,t){const s=new Image;s.onload=()=>{this.images.push({url:e,isLoaded:!0}),t()},s.onerror=()=>{this.images.push({url:e,isLoaded:!1}),t()},s.src=e}progress(e,t){if(e===t){this.isComplete=!0;const e=this.images.filter((e=>!e.isLoaded)).length;0===e?this.emitEvent("done"):e===t&&this.emitEvent("fail"),this.emitEvent("always")}else this.emitEvent("progress",[e,t])}}t.ImageEmitter=a}},t={};var s=function s(i){var a=t[i];if(void 0!==a)return a.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,s),n.exports}(497);module.exports=s})();